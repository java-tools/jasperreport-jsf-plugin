~~ 
~~ JasperReports JSF Plugin
~~ Copyright (C) 2008 A. Alonso Dominguez
~~
~~ This library is free software; you can redistribute it and/or
~~ modify it under the terms of the GNU Lesser General Public
~~ License as published by the Free Software Foundation; either
~~ version 2.1 of the License, or (at your option) any later version.
~~ 
~~ This library is distributed in the hope that it will be useful,
~~ but WITHOUT ANY WARRANTY; without even the implied warranty of
~~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
~~ Lesser General Public License for more details.
~~ 
~~ You should have received a copy of the GNU Lesser General Public
~~ License along with this library; if not, write to the Free Software
~~ Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
~~ 
~~ A. Alonso Dominguez
~~ alonsoft@users.sf.net
~~ 

            ---
			Extending Data Sources
			---
			A. Alonso Dominguez


Extending Data Sources

  Many data sources are currently supported by the actual version of
JasperReports JSF-Plugin, but you can provide your owns extending the 
{{{apidocs\net\sf\jasperreports\jsf\fill\Filler.html}<<<Filler>>>}} API.

  The recommended way of doing this is extending the 
{{{apidocs\net\sf\jasperreports\jsf\fill\AbstractFiller.html}<<<AbstractFiller>>>}} or
{{{apidocs\net\sf\jasperreports\jsf\fill\AbstractSQLFiller.html}<<<AbstractSQLFiller>>>}}
if you want to provide means of accessing SQL data sources.

* Offering the new filler to the plugin

  Once you have implemented your own <<<Filler>>> you will need to provide
it as a service which will be loaded from the classpath. The way this is done
is using the file <<<META-INF/services/net.sf.jasperreports.jsf.fill.Filler>>>
which must be also in the classpath.

  The information of that file is similar than the specified at 
{{{http://java.sun.com/j2se/1.3/docs/guide/jar/jar.html#Service%20Provider}Service Provider}}
but not exactly, there is a bit difference that must be considered. That difference
consists in each line of the file must be a pair where the first part is the
data source type and the last one is the <<<Filler>>> implementation class name.
Here is a code snippet which is exactly the one provided by default in this plugin:

+---
bean:net.sf.jasperreports.jsf.fill.providers.BeanFiller
csv:net.sf.jasperreports.jsf.fill.providers.CsvFiller
empty:net.sf.jasperreports.jsf.fill.providers.EmptyFiller
jdbc:net.sf.jasperreports.jsf.fill.providers.JdbcFiller
jndi:net.sf.jasperreports.jsf.fill.providers.JndiFiller
map:net.sf.jasperreports.jsf.fill.providers.MapFiller
resultset:net.sf.jasperreports.jsf.fill.providers.ResultSetFiller
xml:net.sf.jasperreports.jsf.fill.providers.XmlFiller
+---

  You can also replace one of the provided <<<Filler>>>s by one written by yourself.
However, this is not recommended so do it by your own risk.